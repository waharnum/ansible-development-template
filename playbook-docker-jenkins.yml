---
- hosts: docker
  remote_user: vagrant
  become: yes

  vars:
    - custom_jenkins_image: "aharnum/jenkins-docker"
    - jenkins_persistent_directory: "/var/jenkins_docker_home"

  tasks:
    - name: copy Dockerfile for custom Jenkins into place
      copy:
        src: Dockerfile.jenkins_indind
        dest: /home/vagrant/Dockerfile.jenkins_indind

    - name: copy plugins file for custom Jenkins into place
      copy:
        src: jenkins-plugins.txt
        dest: /home/vagrant/jenkins-plugins.txt

    - name: copy plugins file for Jenkins job definitions into place
      copy:
        src: jenkins-jobs.yml
        dest: /home/vagrant/jenkins-jobs.yml

    - name: copy .ini file for Jenkins job builder into place
      copy:
        src: jenkins_jobs.ini
        dest: /home/vagrant/jenkins_jobs.ini

    # http://container-solutions.com/running-docker-in-jenkins-in-docker/
    - name: build custom Jenkins container with passwordless sudo
      shell: "docker build -t aharnum/jenkins-docker -f Dockerfile.jenkins_indind /home/vagrant/"

    - name: stop custom Jenkins container if it's running
      docker:
        image: "{{ custom_jenkins_image }}"
        name: jenkins
        state: stopped

    - name: create persistent directory on host for Jenkins container
      file:
        path: "{{ jenkins_persistent_directory }}"
        state: directory
        # Must be owned by Jenkins user (UID 1000 in container)
        owner: 1000

    # As per https://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/
    - name: launch Jenkins container with access to the Docker socket and the Docker binary
      docker:
        image: "{{ custom_jenkins_image }}"
        name: jenkins
        # So we can interact with it from the host system
        ports:
          - "8080:8080"
        state: started
        volumes:
          # Docker socket
          - "/var/run/docker.sock:/var/run/docker.sock"
          # Docker binary
          - "/usr/bin/docker:/bin/docker"
          # Hacky fix for issue described at https://github.com/jpetazzo/dind/issues/66
          - "/lib64/libdevmapper.so.1.02:/usr/lib/libdevmapper.so.1.02"
          - "/lib64/libsystemd-journal.so.0:/usr/lib/libsystemd-journal.so.0"
          - "/lib64/libsystemd-id128.so.0:/usr/lib/libsystemd-id128.so.0"
          - "/lib64/libsystemd-id128.so.0:/usr/lib/libsystemd-id128.so.0"
          - "/lib64/libgcrypt.so.11:/usr/lib/libgcrypt.so.11"
          - "/lib64/libdw.so.1:/usr/lib/libdw.so.1"
          # Persistent directory for Jenkins
          - "{{ jenkins_persistent_directory }}:/var/jenkins_home"

    # wait for Jenkins to finish launching
    - name: wait a little bit for the Jenkins container
      wait_for:
        port: 8080
        delay: 30

    - name: exec Jenkins Job Builder load within the container
      command: "docker exec -it jenkins sudo jenkins-jobs --conf /var/jenkins_job_builder/jenkins_jobs.ini update --delete-old /var/jenkins_job_builder/jenkins-jobs.yml"

    - name: configure Jenkins git email
      command: "docker exec -it jenkins git config --global user.email 'jenkins@localhost'"

    - name: configure Jenkins git username
      command: "docker exec -it jenkins git config --global user.name 'jenkins'"
